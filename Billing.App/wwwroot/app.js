/*! For license information please see app.js.LICENSE.txt */
(()=>{var e={46:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/fonts/FontAwesome.otf"},558:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/fonts/fontawesome-webfont.eot"},153:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/fonts/fontawesome-webfont.svg"},541:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/fonts/fontawesome-webfont.ttf"},830:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/fonts/fontawesome-webfont.woff"},8:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/fonts/fontawesome-webfont.woff2"},620:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/404.svg"},840:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/box.svg"},466:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/company.svg"},331:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/customer.svg"},372:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/gif/load_gray.svg"},494:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/imgs/1.jpg"},709:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/imgs/2.jpg"},836:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/imgs/3.jpg"},649:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/logo/ico-gray.svg"},899:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/logo/ico.svg"},985:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/product.png"},253:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/select.svg"},683:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r=n.p+"assets/images/user.png"},695:(e,t,n)=>{var r={"./FontAwesome.otf":46,"./fontawesome-webfont.eot":558,"./fontawesome-webfont.svg":153,"./fontawesome-webfont.ttf":541,"./fontawesome-webfont.woff":830,"./fontawesome-webfont.woff2":8};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=695},745:(e,t,n)=>{var r={"./404.svg":620,"./box.svg":840,"./company.svg":466,"./customer.svg":331,"./gif/load_gray.svg":372,"./imgs/1.jpg":494,"./imgs/2.jpg":709,"./imgs/3.jpg":836,"./logo/ico-gray.svg":649,"./logo/ico.svg":899,"./product.png":985,"./select.svg":253,"./user.png":683};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=745}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{"use strict";var e,t=(e="[Bouer]",{log:function(t){console.log.apply(null,[e].concat(t))},error:function(t){console.error.apply(null,[e].concat(t))},warn:function(t){console.warn.apply(null,[e].concat(t))},info:function(t){console.info.apply(null,[e].concat(t))}}),r=function(){function e(){}return e.on=function(t,n){return d(this.events[t])&&(this.events[t]=[]),this.events[t].push(n),{eventName:t,callback:n,off:function(){return e.off(t,n)}}},e.off=function(e,t){var n=this.events[e]||[];return n.splice(n.indexOf(t),1),!0},e.once=function(n,r){var o={},i=e.on(n,(function(e){o.onemit&&o.onemit(e)}));try{r(o)}catch(e){t.error(L(e))}finally{e.off(n,i.callback)}},e.emit=function(e,n){try{N(this.events[e]||[],(function(e){return e(n)}))}catch(e){t.error(L(e))}},e.events={},e}(),o={set:function(e,t,n){return Object.defineProperty(e,t,n)},descriptor:function(e,t){return Object.getOwnPropertyDescriptor(e,t)},transfer:function(e,t,n){var r=this.descriptor(t,n);n in e||(e[n]=void 0),this.set(e,n,r)}},i=function(e,t,n){var r=this;this.destroy=function(){var e=r.descriptor.watches.indexOf(r);-1!==e&&r.descriptor.watches.splice(e,1),(r.onDestroy||function(){})()},this.descriptor=e,this.property=e.propName,this.callback=t,n&&(this.node=n.node,this.onDestroy=n.onDestroy)},a=function(){function e(n){var i=this;this._IRT_=!0,this.watches=[],this.computed=function(){if(!i.isComputed)return{get:function(){},set:function(e){}};var e=i.fnComputed.call(i.context);if(d(e))throw new Error("Invalid value used as return in “function $computed(){...}”.");var t=f(e)||v(e);return{get:t&&"get"in e?e.get:function(){return e},set:t&&"set"in e?e.set:void 0}},this.get=function(){var e=i.computed().get;r.emit("BeforeGet",i),i.propValue=i.isComputed?P(e.call(i.context)):i.propValue;var t=i.propValue;return r.emit("AfterGet",i),t},this.set=function(n){if(!(i.propValue===n||Number.isNaN(i.propValue)&&Number.isNaN(n))){var o=i.computed().set;if(i.isComputed&&o)P(o.call(i.context,n));else if(i.isComputed&&d(o))return;if(i.propValueOld=i.propValue,r.emit("BeforeSet",i),f(n)||Array.isArray(n)){if(typeof i.propValue!=typeof n)return t.error("Cannot set “"+typeof n+"” in “"+i.propName+"” property.");if(Array.isArray(n)){e.transform({data:n,descriptor:i,context:i.context});var a=i.propValue;a.splice(0,a.length),a.push.apply(a,n)}else f(n)&&(n instanceof Node?i.propValue=n:(e.transform({data:n,context:i.context}),d(i.propValue)?i.propValue=n:T(n,i.propValue)))}else i.propValue=n;r.emit("AfterSet",i),i.notify()}},this.propName=n.propName,this.propSource=n.srcObject,this.context=n.context,this.baseDescriptor=o.descriptor(this.propSource,this.propName),this.propValue=this.baseDescriptor.value,this.isComputed="function"==typeof this.propValue&&"$computed"===this.propValue.name,this.isComputed&&(this.fnComputed=this.propValue,this.propValue=void 0),"function"!=typeof this.propValue||this.isComputed||(this.propValue=this.propValue.bind(this.context))}return e.prototype.notify=function(){var e=this;N(this.watches,(function(t){return t.callback.call(e.context,e.propValue,e.propValueOld)}))},e.prototype.onChange=function(e,t){var n=new i(this,e,{node:t});return this.watches.push(n),n},e.transform=function(n){var r=n.context,i=function(n,a,s,u){if(Array.isArray(n)){if(null==u)return t.warn("Cannot transform this array to a reactive one because no reactive object was provided"),n;if(-1!==a.indexOf(n))return n;a.push(n);var c=n,l={};Object.setPrototypeOf(c,Object.create(Array.prototype));var d=Object.getPrototypeOf(c);return N(["push","pop","unshift","shift","splice"],(function(e){l[e]=c[e].bind(c),d[e]=function(){var t=c.slice(),n=[].slice.call(arguments);switch(e){case"push":case"unshift":N(C(n),(function(e){(f(e)||Array.isArray(e))&&i(e,a,s)}))}var o=l[e].apply(c,n);return N(u.watches,(function(o){return o.callback.call(r,c,t,{method:e,args:n})})),o}})),c}return f(n)?(-1!==a.indexOf(n)||(a.push(n),N(Object.keys(n),(function(t){var u=n;if("value"in o.descriptor(n,t)){var c=u[t];if(!(c instanceof Object&&(c._IRT_||c instanceof Node))){var l=new e({propName:t,srcObject:n,context:r});o.set(n,t,l),Array.isArray(c)?(i(c,a,s,l),N(c,(function(e){return i(e,a,s)}))):f(c)&&i(c,a,s)}}})),a.splice(a.indexOf(n),1),s.push(n)),n):n};return i(n.data,[],[],n.descriptor)},e}(),s={skip:"e-skip",build:"e-build",array:"e-array",if:"e-if",elseif:"e-else-if",else:"e-else",show:"e-show",req:"e-req",for:"e-for",data:"data",def:"e-def",wait:"wait-data",text:"e-text",bind:"e-bind",property:"e-",skeleton:"e-skeleton",route:"route-view",href:":href",entry:"e-entry",on:"on:",silent:"--s",slot:"slot",ref:"ref",put:"e-put",builtInEvents:{add:"add",compile:"compile",request:"request",response:"response",fail:"fail",done:"done"},check:function(e,t){return g(e.nodeName,t)},isConstant:function(e){var t=this;return-1!==Object.keys(this).map((function(e){return t[e]})).indexOf(e)}},u=function(){var e=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n={};return N(e,(function(e){d(e)||N(Object.keys(e),(function(t){o.transfer(n,e,t)}))})),n};return{obj:e,mixin:function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var i=e.apply({},n);return N(Object.keys(i),(function(e){var n=e in t;if(o.transfer(t,i,e),n){var r=t;r[e]=r[e]}})),t},array:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=[];return N(e,(function(e){if(!d(e))return Array.isArray(e)?void N(Object.keys(e),(function(t){var r=e[t];d(r)||(Array.isArray(r)?[].push.apply(n,r):n.push(r))})):n.push(e)})),n}}}();function c(e,t){if(!e)return Promise.reject(new Error("Invalid Url"));var n=function(e,n){return(t||{})[e]||n},r=n("headers",{}),o=n("method","get"),i=n("body",void 0),a=n("body",(function(e){})),s=function(e){if(!(!U.documentMode||e.match(/^(get|post)$/i)&&$.XMLHttpRequest))return new $.ActiveXObject("Microsoft.XMLHTTP");if($.XMLHttpRequest)return new $.XMLHttpRequest;throw new Error("This browser does not support XMLHttpRequest.")}(o);return new Promise((function(t,n){var u=function(t,n,r,o,i){t({url:e,ok:n,status:r,statusText:o.statusText||"",headers:o.getAllResponseHeaders(),json:function(){return Promise.resolve(JSON.stringify(i))},text:function(){return Promise.resolve(i)}})};s.open(o,e,!0),N(Object.keys(r),(function(e){s.setRequestHeader(e,r[e])})),s.onload=function(){var n="response"in s?s.response:s.responseText,r=1223===s.status?204:s.status;0===r&&(r=n?200:"file"===j(e).protocol?404:0),u(t,r>=200&&r<400,r,s,n)},s.onerror=function(){u(n,!1,s.status,s,"")},s.onabort=function(){u(n,!1,s.status,s,"")},s.ontimeout=function(){u(n,!1,s.status,s,"")},a(s),s.send(i)}))}function l(e,t,n){for(var r="01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ",o="",i=!1,a=0;a<(e||8);a++){var s=Math.floor(Math.random()*r.length);o+=i?w(r[s]):r[s],i=!i}return(t||"")+o+(n||"")}function d(e){return void 0===e||null==e}function f(e){return"object"==typeof e&&"[object Object]"===String(e)}function p(e){return void 0!==e&&"string"==typeof e}function h(e){return!e||!f(e)||0===Object.keys(e).length}function v(e){return"function"==typeof e}function m(e,t){return d(e)?t:e}function b(e){if(d(e))throw new Error("Application is not initialized");return e}function y(e){return e?e.trim():e}function g(e,t){return e.substring(0,t.length)===t}function w(e){return e.toLowerCase()}function x(e){return function(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}(e)?String(e):f(e)||Array.isArray(e)?JSON.stringify(e):v(e.toString)?e.toString():String(e)}function N(e,t,n){for(var r=0;r<e.length;r++)t.call(n,e[r],r)}function k(e,t,n){for(var r=[],o=0;o<e.length;o++)t.call(n,e[o],o)&&r.push(e[o]);return r}function C(e){return e?[].slice.call(e):[]}function A(e,t){var n=U.createComment(t||" e ");return n.id=e||l(8),n}function O(e,t){return _(e,t)}function _(e,t){var n=U.createElement(e);v(t)&&t(n,U);var r={appendTo:function(e){return e.appendChild(n),r},build:function(){return n},child:function(){return n.children[0]},children:function(){return[].slice.call(n.childNodes)}};return r}function E(e){var t=e.parentNode;t&&t.removeChild(e)}function T(e,t){N(Object.keys(e),(function(n){var r=e[n];if(n in t)return f(r)?T(r,t[n]):t[n]=r;o.transfer(t,e,n)}))}function j(e){var t=e;"documentMode"in U&&(H.setAttribute("href",t),t=H.href),H.href=t;var n=H.hostname;"[::1]"!==H.hostname&&n.indexOf(":")>-1&&(n="["+n+"]");var r={href:H.href,baseURI:H.baseURI,protocol:H.protocol?H.protocol.replace(/:$/,""):"",host:H.host,search:H.search?H.search.replace(/^\?/,""):"",hash:H.hash?H.hash.replace(/^#/,""):"",hostname:n,port:H.port,pathname:"/"===H.pathname.charAt(0)?H.pathname:"/"+H.pathname,origin:""};return r.origin=r.protocol+"://"+r.host,r}function I(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=e.split(/\/\//),o=r.length>1?r[0]+"//":"",i=(""===o?r[0]:r[1]).split(/\//),a=[];return N(i,(function(e){return y(e)?a.push(e):null})),N(t,(function(e){return N(e.split(/\//),(function(e){return y(e)?a.push(e):null}))})),o+a.join("/")}function S(e,t){var n=function(e){return"../"===e.substring(0,3)},r=function(e){var t=e.split("/");return/\.html$|\.css$|\.js$/gi.test(e)&&t.pop(),{relative:t.join("/"),parts:t}};if("./"===t.substring(0,2))return r(e).relative+t.substring(1);if(!n(t))return t;var o=r(e).parts;return o.push(function e(t){return n(t)?(o.pop(),e(t.substring(3))):t}(t)),o.join("/")}function L(e){return e?(e.stack="",e):"Unknown Error"}function P(e){return e instanceof Promise&&e.then((function(e){v(e)?e.call():e instanceof Promise&&e.then()})).catch((function(e){return t.error(e)})),e}function D(e,t,n){void 0===n&&(n=!1);var r=null;if(!e)return null;for(var o=0;o<t.length&&!(r=e.attributes[t[o]]);o++);return!d(r)&&n&&e.removeAttribute(r.name),r}function V(e,t){var n=e.attributes||[];return n.getNamedItem(t)||C(n).find((function(e){return e.name===t||g(e.name,t+":")}))}function R(e){return e.root||e}function M(e,n,i){return d(i)&&(i=e.data),f(n)?f(i)&&null==i?(t.error('Invalid targetObject value, expected an "Object Literal" and got "'+typeof i+'".'),n):(a.transform({data:n,context:e}),N(Object.keys(n),(function(e){var t,a;r.once("AfterGet",(function(r){r.onemit=function(e){return t=e},o.descriptor(n,e).get()})),r.once("AfterGet",(function(t){t.onemit=function(e){return a=e};var n=o.descriptor(i,e);n&&v(n.get)&&n.get()})),o.transfer(i,n,e),a&&t&&(N(a.watches,(function(e){-1===t.watches.indexOf(e)&&t.watches.push(e)})),t.notify())})),i):(t.error('Invalid inputData value, expected an "Object Literal" and got "'+typeof n+'".'),i)}function q(e,n,r){var o=void 0;if(e instanceof HTMLElement)o=e;else if("string"==typeof e)try{var i=U.querySelector(e);if(!i)return t.error('Element with "'+e+'" selector Not Found.'),null;o=i}catch(e){return t.error(L(e)),null}if(d(o))throw t.error('Invalid element provided at app.toJsObj(> "'+e+'" <).');var a=((n=n||{}).names||"[name]").replace(/\[|\]/g,"").split(","),c=(n.values||"[value]").replace(/\[|\]/g,"").split(","),l=function(e,t){return t in e?e[t]:e.getAttribute(t)||e.innerText},p=function(e){var t={},n={BUTTON:!0},o={checkbox:!0,radio:!0};return function e(i){var d=D(i,a);if(d){var f=d.value;if(!0===n[i.tagName])return;if(i instanceof HTMLInputElement&&!0===o[i.type]&&!1===i.checked)return;var p=t[f],h=i.hasAttribute(s.array),m=function(e){var t=void 0;return c.find((function(n){return!!(t=l(e,n))})),t}(i);""!==m&&(t[f]=h?p?u.array(p,m):[m]:p?u.array(p,m):m),v(r)&&P(r(t,f,m,i))}N(C(i.children),(function(t){D(t,[s.build])||e(t)}))}(e),t},m=p(o);return N(C(o.querySelectorAll("[".concat(s.build,"]"))),(function(e){var t=l(e,s.build),n=e.hasAttribute(s.array),o=p(e);(function(e){if(h(e))return!1;for(var t=!1,n=Object.keys(e),r=0;r<n.length;r++)if(!d(n[r])){t=!0;break}return t})(o)&&function t(i,a){var s=i.split("."),c=s[0];s.shift();var l=a[c];return d(l)&&(a[c]={}),0===s.length?(n?f(l)&&!h(l)?a[c]=[u.obj(l,o)]:Array.isArray(l)?l.push(o):a[c]=[o]:d(l)?a[c]=o:a[c]=u.obj(l,o),void(v(r)&&P(r(a,c,o,e)))):Array.isArray(l)?N(l,(function(e){t(s.join("."),e)})):void t(s.join("."),a[c])}(t,m)})),m}var $=window,U=document,H=_("a").build(),B=function(){function e(e,t){this.delimiters=[],this.bouer=e,this.delimiters=t}return e.prototype.add=function(e){this.delimiters.push(e)},e.prototype.remove=function(e){var t=this.delimiters.findIndex((function(t){return t.name===e}));this.delimiters.splice(t,1)},e.prototype.run=function(e){var t=this;if(d(e)||""===y(e))return[];var n=null,r=function(e,r){for(var o=0;o<t.delimiters.length;o++){var i=t.delimiters[o],a=e.match(RegExp(i.delimiter.open+"([\\S\\s]*?)"+i.delimiter.close,r||""));if(a)return n=i,a}},o=r(e,"g");return o?o.map((function(e){var t=r(e);return{field:t[0],expression:y(t[1]),delimiter:n}})):[]},e.prototype.shorthand=function(e){if(d(e)||""===y(e))return null;var t=e.match(new RegExp("{([\\w{$,-}]*?)}"));return t?{field:t[0],expression:y(t[1])}:null},e}(),z=function(){function e(e){this.bouer=e}return e.prototype.execRaw=function(e,n){try{Function(e).call(n||this.bouer)}catch(e){t.error(L(e))}},e.prototype.exec=function(t){var n=u.obj(this.bouer.globalData||{},t.aditional||{},t.data||{},{$root:this.bouer.data,$mixin:u.mixin});return delete t.data,t.data=n,e.run(t)},e.run=function(e){try{return Function("var d$=arguments[0].d;return(function(){var r$;with(d$){"+(!1===e.isReturn?"":"r$=")+e.code+"}return r$;}).apply(this, arguments[0].a)").call(e.context,{d:e.data||{},a:e.args})}catch(e){t.error(L(e))}},e}(),F=function(){function e(e){var t=this;this._IRT_=!0,this.backgroudColor="",this.waveColor="",this.defaultBackgroudColor="#E2E2E2",this.defaultWaveColor="#ffffff5d",this.identifier="bouer",this.numberOfItems=1,this.reset(),this.bouer=e,this.style=_("style",(function(e){return e.id=t.identifier})).build()}return e.prototype.reset=function(){this.backgroudColor=this.defaultBackgroudColor,this.waveColor=this.defaultWaveColor},e.prototype.init=function(e){var t=this;if(this.style&&(U.getElementById(this.identifier)||U.head.appendChild(this.style),this.style.sheet)){for(var n=0;n<this.style.sheet.cssRules.length;n++)this.style.sheet.deleteRule(n);e?(this.backgroudColor=e.background||this.defaultBackgroudColor,this.waveColor=e.wave||this.defaultWaveColor,this.numberOfItems=e.numberOfItems||this.numberOfItems):this.reset();var r=s.skeleton,o=this.backgroudColor,i=["[--s]{ display: none!important; }","["+r+"] { background-color: "+o+"!important; position: relative!important; overflow: hidden; }","["+r+"],["+r+"] * { color: transparent!important; }","["+r+"]::before, ["+r+']::after { content: ""; position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: block; }',"["+r+"]::before { background-color: "+o+"!important; z-index: 1;}","["+r+"]::after { transform: translateX(-100%); background: linear-gradient(90deg, transparent, "+this.waveColor+", transparent); animation: loading 1.5s infinite; z-index: 2; }","@keyframes loading { 100% { transform: translateX(100%); } }","@-webkit-keyframes loading { 100% { transform: translateX(100%); } }"];N(i,(function(e){return t.style.sheet.insertRule(e)})),this.style.innerText=i.join(" ")}},e.prototype.insertItems=function(e){var t=e.parentElement||e.parentNode,n=e;if(null!=t&&!(this.numberOfItems<=1)&&(n.hasAttribute("e-skeleton")||!d(n.querySelector("[e-skeleton]")))){var r=l(6);e.setAttribute("skeleton-clone-code",r);for(var o=0;o<this.numberOfItems-1;o++){var i=e.cloneNode(!0);i.setAttribute("skeleton-cloned",r),t.insertBefore(i,e)}}},e.prototype.clearItems=function(e){var t=e,n=e.parentElement||e.parentNode,r=t.getAttribute("skeleton-clone-code");r&&(t.removeAttribute("skeleton-clone-code"),N([].slice.call(n.querySelectorAll('[skeleton-cloned="'+r+'"]')),(function(e){n.removeChild(e)})))},e.prototype.clear=function(e){e=e?'="'+e+'"':"",N(C(b(this.bouer.el).querySelectorAll("["+s.skeleton+e+"]")),(function(e){return e.removeAttribute(s.skeleton)}))},e}(),G=function(){var e=1,n=new Map,r=function(e,t){var n=[],r={__ctor0:e};return N(t||[],(function(e,t){var o="__arg"+t;r[o]=e,n.push(o)})),z.run({code:"new __ctor0("+n.join(",")+")",data:r,isReturn:!0})};return{app:function(e){return{add:function(t,r,o){return function(e,t,r,o){if(e.isDestroyed)throw new Error("Application already disposed.");n.has(e)||n.set(e,new Map),n.get(e).set(t,{clazz:t,isSingleton:m(o,!1),args:r})}(e,t,r,o)},resolve:function(t){return function(e,t){if(e.isDestroyed)throw new Error("Application already disposed.");var o=n.get(e);if(!o)return null;var i=o.get(t);return null==i?null:i.isSingleton?i.instance?i.instance:i.instance=r(t,i.args):r(t,i.args)}(e,t)},clear:function(){!function(e){n.delete(e)}(e)}}},new:function(e,n){return e instanceof ie?(t.error("Cannot create an instance of Bouer using IoC"),null):r(e,n)},newId:function(){return e++}}}(),X=function(e,t){var n=setInterval((function(){e((function(){return clearInterval(n)}))}),t||10)},J=function(e){var t=this;this._IRT_=!0,this.middlewareConfigContainer={},this.run=function(e,n){var r=t.middlewareConfigContainer[e];if(!r)return(n.default||function(){}).call(t.bouer);for(var o=0,i=r[o],a=function(){var e=!1,a=i[n.type];if(a?n.action((function(n,r){Promise.resolve(a.call(t.bouer,n,(function(){e=!0}))).then((function(t){e||r.success(t),r.done()})).catch((function(t){e||r.fail(t),r.done()}))})):(n.default||function(){})(),0==e)return"break";i=r[++o]};null!=i&&"break"!==a(););},this.subscribe=function(e,n){t.middlewareConfigContainer[e]||(t.middlewareConfigContainer[e]=[]);var r={};n.call(t.bouer,(function(e){return r.onBind=e}),(function(e){return r.onUpdate=e})),t.middlewareConfigContainer[e].push(r)},this.has=function(e){var n=t.middlewareConfigContainer[e];return!!n&&n.length>0},this.bouer=e},Y=function(){function e(e){this.binds=[],this.DEFAULT_BINDER_PROPERTIES={text:"value",number:"valueAsNumber",checkbox:"checked",radio:"value",contenteditable:"textContent"},this.BindingDirection={fromInputToData:"fromInputToData",fromDataToInput:"fromDataToInput"},this.bouer=e,this.evaluator=G.app(e).resolve(z),this.cleanup()}return e.prototype.create=function(e){var n=this,o=e.node,i=e.data,a=e.fields,c=e.isReplaceProperty,l=e.context,p=y(m(o.nodeValue,"")),h=o.nodeName,v=o.ownerElement||o.parentNode,b=G.app(this.bouer).resolve(J),g=e.onUpdate||function(e,t){},w={node:o,data:i,nodeName:h,nodeValue:p,fields:a,parent:v,value:""},k=function(e){b.run(h,{type:e,action:function(e){e({binder:w,detail:{}},{success:function(){},fail:function(){},done:function(){}})}})};return h.substring(0,s.bind.length)===s.bind?function(){var a,c=v.type;v.hasAttribute("contenteditable")&&(c="contenteditable"),c=c||v.localName,a=s.bind===h?n.DEFAULT_BINDER_PROPERTIES[c]||"value":h.split(":")[1];var m,b,A=v instanceof HTMLSelectElement,O=A&&!0===v.multiple,_=D(v,[":value"],!0),E=_?_.value:"'"+v.value+"'",T=y(p),j={fromDataToInput:function(e){if(!Array.isArray(m)){if("radio"===c)return v.checked=v[a]==e;var t=f(e)?x(e):d(e)?"":e;if(t===v[a])return;return v[a]=t}if(b=b||n.evaluator.exec({data:i,code:E,context:l}),O)return N(C(v.options),(function(e){e.selected=-1!==m.indexOf(y(e.value))}));if(-1===m.indexOf(b))switch(typeof v[a]){case"boolean":v[a]=!1;break;case"number":v[a]=0;break;default:v[a]=""}},fromInputToData:function(e){if(!Array.isArray(m))return n.evaluator.exec({isReturn:!1,context:l,data:u.obj(i,{$vl:e}),code:T+"=$vl"});if(b=b||n.evaluator.exec({data:i,code:E,context:l}),O){var t=[];return N(C(v.options),(function(e){!0===e.selected&&t.push(y(e.value))})),m.splice(0,m.length),m.push.apply(m,t)}e?m.push(b):m.splice(m.indexOf(b),1)}},I=function(e,n){return A&&!O&&Array.isArray(m)&&!E?t.error("Since it's a <select> array binding, it expects the “multiple” attribute in order to bind the multiple values."):O||!Array.isArray(m)||E?j[e](n):t.error('Since it\'s an array binding it expects a model but it has not been defined, provide a model as it follows: value="String-Model" or :value="Object-Model".')};r.once("AfterGet",(function(t){var r=function(){return n.evaluator.exec({data:i,code:T,context:l})};t.onemit=function(t){n.binds.push({isConnected:e.isConnected,watch:t.onChange((function(){k("onUpdate");var e=r();I(n.BindingDirection.fromDataToInput,e),g(e,o)}),o)})},m=r()})),k("onBind"),I(n.BindingDirection.fromDataToInput,m);var S=["input","propertychange","change"];return-1===S.indexOf(v.localName)&&S.push(v.localName),N(S,(function(e){"change"===e&&"select"!==v.localName||v.addEventListener(e,(function(){I(n.BindingDirection.fromInputToData,v[a])}),!1)})),v.removeAttribute(o.nodeName),w}():function(){var t=o;h.substring(0,s.property.length)===s.property&&d(c)&&(w.nodeName=h.substring(s.property.length),v.setAttribute(w.nodeName,p),t=v.attributes[w.nodeName],v.removeAttribute(o.nodeName));var u=function(){var e=w.nodeValue,r=!1;if(N(a,(function(t){var a=t.delimiter;a&&"html"===a.name&&(r=!0);var s=n.evaluator.exec({data:i,code:t.expression,context:l});s=d(s)?"":s,e=e.replace(t.field,x(s)),a&&"function"==typeof a.onUpdate&&(e=a.onUpdate(e,o,i))})),w.value=e,!r)return t.nodeValue=e;var s=_("div",(function(t){return t.innerHTML=e})).children();v.innerHTML="",N(s,(function(e){v.appendChild(e),G.app(n.bouer).resolve(ee).compile({el:e,data:i,context:l})}),n)};return r.once("AfterGet",(function(t){t.onemit=function(t){n.binds.push({isConnected:e.isConnected,watch:t.onChange((function(){k("onUpdate"),u(),g(t.propValue,o)}),o)})},u()})),k("onBind"),w.node=t,w}()},e.prototype.remove=function(e,t,n){this.binds=k(this.binds,(function(r){var o=r.watch.node;return(o.ownerElement||o.parentElement)!==e||(d(t)?r.watch.destroy():o.nodeName!==t||n!==r.watch.property&&!d(n)||r.watch.destroy())}))},e.prototype.onPropertyChange=function(e,t,n){var o;return r.once("AfterGet",(function(r){r.onemit=function(e){return o=e.onChange(t)},n[e]})),o},e.prototype.onPropertyInScopeChange=function(e){var t=this,n=[];return r.once("AfterGet",(function(r){r.onemit=function(r){if(!n.find((function(e){return e.property===r.propName&&e.descriptor.propSource===r.propSource}))){var o=!1;n.push(r.onChange((function(){o||(o=!0,e.call(t.bouer,t.bouer),o=!1)})))}},e.call(t.bouer,t.bouer)})),{watches:n,destroy:function(){return N(n,(function(e){return e.destroy()}))}}},e.prototype.cleanup=function(){var e=this;0!=m(this.bouer.config.autoUnbind,!0)&&X((function(){e.binds=k(e.binds,(function(e){if(e.isConnected())return!0;e.watch.destroy()}))}))},e}(),W=function(){function e(e,t){this._IRT_=!0,this.$events={},this.input=_("input").build(),this.bouer=e,this.evaluator=G.app(e).resolve(z),this.cleanup()}return e.prototype.compile=function(e,n,r){var o=this,i=e.ownerElement||e.parentNode,a=e.nodeName;if(d(i))return t.error("Invalid ParentElement of “"+a+"”");var u=y(m(e.nodeValue,"")),c=a.substring(s.on.length).split("."),l=c[0];if(c.shift(),""===u)return t.error("Expected an expression in the “"+a+"” and got an <empty string>.");i.removeAttribute(a);var f=function(e){var i={prevent:"preventDefault",stop:"stopPropagation"};N(c,(function(t){var n=i[t];e[n]&&e[n]()}));var a=[e],s=o.evaluator.exec({data:n,code:u,args:a,aditional:{event:e},context:r});if(v(s))try{s.apply(r,a)}catch(e){t.error(L(e))}},p={},h=["capture","once","passive"];N(c,(function(e){e=e.toLocaleLowerCase(),-1!==h.indexOf(e)&&(p[e]=!0)})),"on"+l in this.input?i.addEventListener(l,f,p):this.on({eventName:l,callback:f,modifiers:p,context:r,attachedNode:i})},e.prototype.on=function(e){var t=this,n=this,r=e.eventName,o=e.callback,i=e.context,a=e.attachedNode,s=e.modifiers,u=function(e){return o.apply(i||t.bouer,[e])},c={eventName:r,attachedNode:a,modifiers:s,callback:u,destroy:function(){return n.off({callback:u,attachedNode:a,eventName:r})},emit:function(e){return t.emit({eventName:r,attachedNode:a,init:(e||{}).init,once:(e||{}).once})}};return this.$events[r]||(this.$events[r]=[]),this.$events[r].push(c),c},e.prototype.off=function(e){var t=e.eventName,n=e.callback,r=e.attachedNode;this.$events[t]&&(this.$events[t]=k(this.$events[t],(function(e){var o=e.eventName===t&&n==e.callback;return(!r||e.attachedNode!==r||!o)&&(e.eventName===t&&e.attachedNode===r&&d(n)?void 0:!o)})))},e.prototype.emit=function(e){var t=this,n=e.eventName,r=e.init,o=e.once,i=e.attachedNode,a=this.$events[n];if(a){var s=function(e,t){e.addEventListener(n,t,{once:!0}),e.dispatchEvent(new CustomEvent(n,r))};this.$events[n]=k(a,(function(e){var a=e.attachedNode,u=m((e.modifiers||{}).once,!1)||m(o,!1);return i?a!==i||(s(a,e.callback),!u):a?(s(a,e.callback),!u):(P(e.callback.call(t.bouer,new CustomEvent(n,r))),!u)}))}},e.prototype.cleanup=function(){var e=this;0!=m(this.bouer.config.autoOffEvent,!0)&&X((function(){N(Object.keys(e.$events),(function(t){e.$events[t]=k(e.$events[t],(function(e){return!1===(e.modifiers||{}).autodestroy||!e.attachedNode||!!e.attachedNode.isConnected||void 0}))}))}))},e}(),K=function(){function e(e){this._IRT_=!0,this.routeView=null,this.activeAnchors=[],this.base=null,this.bouer=e}return e.prototype.init=function(){var e=this;if(this.routeView=b(this.bouer.el).querySelector("[route-view]"),!d(this.routeView)){this.routeView.removeAttribute("route-view"),this.base="/";var n=U.head.querySelector("base");if(n){var r=n.attributes.getNamedItem("href");if(!r)return t.error('The href="/" attribute is required in base element.');this.base=r.value}this.defaultPage&&this.navigate(U.location.href),$.addEventListener("popstate",(function(t){t.preventDefault(),e.navigate((t.state||{}).url||location.href,{setURL:!1})}))}},e.prototype.navigate=function(e,n){var r=this;if(this.routeView){if(d(e))return t.log("Invalid url provided to the navigation method.");var o=j(e=y(e)),i=m(this.bouer.config.usehash,!0),a=(i?o.hash:o.pathname).split("?")[0];n=n||{},"/"===a[a.length-1]&&(a=a.substring(0,a.length-1));var s=this.toPage(a);if(this.clear(),s&&(s||!e.endsWith(".html"))){var u=O(s.name,(function(e){e.setAttribute("data",f(n.data)?JSON.stringify(n.data):"$data")})).appendTo(this.routeView).build();U.title=s.title||U.title,m(n.setURL,!0)&&this.pushState(o.href,U.title);var c=I(o.baseURI,i?"#":"",s.route);G.app(this.bouer).resolve(re).order(u,this.bouer.data,(function(){r.markActiveAnchorsWithRoute(c)}))}}},e.prototype.pushState=function(e,t){e=j(e).href,U.location.href!==e&&$.history.pushState({url:e,title:t},t||"",e)},e.prototype.popState=function(e){d(e)&&(e=-1),$.history.go(e)},e.prototype.toPage=function(e){return""===e||"/"===e||e==="/"+I((this.base,"index.html"))?this.defaultPage:G.app(this.bouer).resolve(re).find((function(t){if(!t.route)return!1;var n=t.route.replace(/{(.*?)}/gi,"[\\S\\s]{1,}");return!!Array.isArray(new RegExp("^"+n+"$","i").exec(e))}))||this.notFoundPage},e.prototype.markActiveAnchorsWithRoute=function(e){var t=this,n=this.bouer.config.activeClassName||"active-link",r=b(this.bouer.el),o=r.querySelectorAll("a");d(e)||(N(this.activeAnchors,(function(e){return e.classList.remove(n)})),N([].slice.call(r.querySelectorAll("a."+n)),(function(e){return e.classList.remove(n)})),this.activeAnchors=[],N(C(o),(function(r){r.href.split("?")[0]===e.split("?")[0]&&(r.classList.add(n),t.activeAnchors.push(r))})))},e.prototype.markActiveAnchor=function(e){var t=this.bouer.config.activeClassName||"active-link";d(e)||(N(this.activeAnchors,(function(e){return e.classList.remove(t)})),N([].slice.call(b(this.bouer.el).querySelectorAll("a."+t)),(function(e){return e.classList.remove(t)})),e.classList.add(t),this.activeAnchors=[e])},e.prototype.clear=function(){this.routeView.innerHTML=""},e.prototype.configure=function(e){return!0!==e.isDefault||d(this.defaultPage)?!0!==e.isNotFound||d(this.notFoundPage)?(!0===e.isDefault&&(this.defaultPage=e),void(!0===e.isNotFound&&(this.notFoundPage=e))):t.warn("There are multiple “NotFound Page” provided, check the “"+e.route+"” route."):t.warn("There are multiple “Default Page” provided, check the “"+e.route+"” route.")},e}(),Z=function(){function e(){this._IRT_=!0,this.wait={},this.data={},this.req={}}return e.prototype.set=function(e,n,r){if("wait"===e)return t.warn("Only “get” is allowed for type of data");this[e][n]=r},e.prototype.get=function(e,t,n){var r=this[e][t];return!0===n&&this.unset(e,t),r},e.prototype.unset=function(e,t){delete this[e][t]},e}(),Q=function(){function e(e,t,n){this._IRT_=!0,this.$custom={},this.errorMsgEmptyNode=function(e){return"Expected an expression in “"+e.nodeName+"” and got an <empty string>."},this.errorMsgNodeValue=function(e){return"Expected an expression in “"+e.nodeName+"” and got “"+m(e.nodeValue,"")+"”."},this.compiler=t,this.context=n,this.bouer=t.bouer,this.$custom=e,this.evaluator=G.app(this.bouer).resolve(z),this.delimiter=G.app(this.bouer).resolve(B),this.binder=G.app(this.bouer).resolve(Y),this.eventHandler=G.app(this.bouer).resolve(W)}return e.prototype.toOwnerNode=function(e){return e.ownerElement||e.parentNode},e.prototype.skip=function(e){e.nodeValue="true"},e.prototype.if=function(e,n){var o=this,i=this.toOwnerNode(e),a=i.parentElement;if(a){var c=[],l=A(),f=e.nodeName,p=function(){};if(f!==s.elseif&&f!==s.else){var h=i,v=[],b=function(){if(null==h)return"break";var e=D(h,["e-if","e-else-if","e-else"]);if(!e)return"break";var i=c[0];return"e-if"===e.name&&i&&e.name===i.attr.name?"break":"e-else"!==e.nodeName&&""===y(m(e.nodeValue,""))?{value:t.error(g.errorMsgEmptyNode(e))}:0!==g.delimiter.run(m(e.nodeValue,"")).length?{value:t.error(g.errorMsgNodeValue(e))}:(c.push({attr:e,node:h}),"e-else"===e.nodeName?(h.removeAttribute(e.nodeName),"break"):(r.once("AfterGet",(function(t){t.onemit=function(t){-1===v.findIndex((function(e){return e.descriptor.propName==t.propName}))&&v.push({attr:e,descriptor:t})},o.evaluator.exec({data:n,code:e.value,context:o.context})})),void h.removeAttribute(e.nodeName)))},g=this;do{var w=b();if("object"==typeof w)return w.value;if("break"===w)break}while(h=h.nextElementSibling);var x=function(){return!d(u.array(c.map((function(e){return e.node})),l).find((function(e){return e.isConnected})))};N(v,(function(e){o.binder.binds.push({isConnected:x,watch:e.descriptor.onChange((function(){return p()}),e.attr)})})),(p=function(){N(c,(function(e){var t=R(e.node);t.parentElement&&(l.isConnected?a.removeChild(t):a.replaceChild(l,t))}));var e=c.map((function(e,t){var n=e.attr.value;switch(e.attr.name){case s.if:return"if("+n+"){ __cb("+t+"); }";case s.elseif:return"else if("+n+"){ __cb("+t+"); }";case s.else:return"else{ __cb("+t+"); }"}})).join(" ");o.evaluator.exec({data:n,isReturn:!1,code:e,context:o.context,aditional:{__cb:function(e){var t=R(c[e].node);a.replaceChild(t,l),o.compiler.compile({el:t,data:n,context:o.context,isConnected:x})}}})})()}}},e.prototype.show=function(e,n){var r=this,o=this.toOwnerNode(e),i=y(m(e.nodeValue,"")),a=function(e){};if(""===i)return t.error(this.errorMsgEmptyNode(e));if(0!==this.delimiter.run(i).length)return t.error(this.errorMsgNodeValue(e));var s=this.binder.create({data:n,node:e,isConnected:function(){return o.isConnected},fields:[{expression:i,field:i}],context:this.context,onUpdate:function(){return a(o)}});(a=function(e){e.style.display=r.evaluator.exec({data:n,code:i,context:r.context})?"":"none"})(o),o.removeAttribute(s.node.nodeName)},e.prototype.for=function(e,n){var o=this,i=this.toOwnerNode(e),c=i.parentElement;if(c&&!i.hasAttribute("skeleton-cloned")){var l=A(),p=e.nodeName,h=y(m(e.nodeValue,"")),v=[],b=!1,g=!1,k=function(){};if(""===h)return t.error(this.errorMsgEmptyNode(e));if(!h.includes(" of ")&&!h.includes(" in "))return t.error("Expected a valid “for” expression in “"+p+"” and got “"+h+'”.\nValid: e-for="item of items".');var C=this.delimiter.run(h);0!==C.length&&this.binder.create({node:e,data:n,fields:C,isReplaceProperty:!0,context:this.context,isConnected:function(){return l.isConnected},onUpdate:function(){return k()}}),i.removeAttribute(p);var O=i.cloneNode(!0);c.replaceChild(l,i);var _=function(t){var r=function(t,r){var i=(S=S||T(y(m(e.nodeValue,"")))).leftHandParts,s=S.sourceValue,c=S.isForOf,l=u.obj(n),d=i[0],f=i[1]||"_index_or_value",p=i[2]||"_for_in_index";return l[d]=t,l[f]=c?r:s[t],l[p]=r,a.transform({data:l,context:o.context})}(t.item,t.index),i=c.insertBefore(O.cloneNode(!0),t.reference||l);return o.compiler.compile({el:i,data:r,context:o.context,onDone:function(e){return o.eventHandler.emit({eventName:s.builtInEvents.add,attachedNode:e,once:!0})}}),v.splice(t.index,0,{el:i,data:r}),i},T=function(e){var t=e.split("|").map((function(e){return y(e)})),r=t[0].replace(/\(|\)/g,"");t.shift();var i=" of ",a=r.split(i);a.length>1||(a=r.split(i=" in "));var s=a[0],u=a[1],c=s.split(",").map((function(e){return y(e)})),l="of"===y(i)?u:"Object.keys("+u+")";return{filters:t,type:i,leftHand:s,rightHand:u,sourceValue:o.evaluator.exec({data:n,code:u,context:o.context}),leftHandParts:c,iterableExpression:l,isForOf:"of"===y(i)}},j=function(e,r){var i=r.split(":").map((function(e){return y(e)}));if(1!=i.length)return function(e,r){b=!0;var i=r[2],a=r[1];if(d(a)||""===a)return t.error("Invalid where-value in “"+p+"” with “"+h+"” expression."),e;if("function"==typeof(a=o.evaluator.exec({data:n,code:a,context:o.context})))e=a(e);else{if((d(i)||""===i)&&f(e[0]||""))return t.error("Invalid where-keys in “"+p+"” with “"+h+"” expression, at least one where-key to be provided when using list of object."),e;var s=[];N(e,(function(e){var t=!1;if(d(i))t=x(e).toLowerCase().includes(a.toLowerCase());else for(var n=i.split(",").map((function(e){return y(e)})),r=0;r<n.length;r++){var u=n[r];if(x(o.evaluator.exec({data:e,code:u,context:o.context})).toLowerCase().includes(a.toLowerCase())){t=!0;break}}t&&s.push(e)})),e=s}return e}(e,i);t.error("Invalid “"+p+"” where expression “"+h+"”, at least a where-value and where-keys, or a filter-function must be provided")},I=r.on("AfterGet",(function(t){o.binder.binds.push({isConnected:function(){return l.isConnected},watch:t.onChange((function(t,n,r){return function(t){if(b||g)return k();var n=(t=t||{}).method,r=t.args,o=v,i=function(){return Promise.resolve((function(t){var n=(S=S||T(y(m(e.nodeValue,"")))).leftHandParts[1]||"_index_or_value";"_index_or_value"!==n&&N(t,(function(e,t){e.data[n]=t}))})).then((function(e){return e(v)}))};switch(n){case"pop":case"shift":if(d(c=o[n]()))return;if(E(R(c.el)),"pop"===n)return;return i();case"splice":var a=r[0],s=r[1];N(o.splice(a,s),(function(e){return E(R(e.el))}));var u=(S=S||T(y(m(e.nodeValue,"")))).leftHandParts[1]||"_index_or_value";if(N([].slice.call(r,2),(function(e){a++,_({reference:R(v[a].el)||l,index:a,item:e})})),"_index_or_value"===u)return;for(;a<v.length;a++){var c;"number"==typeof(c=v[a].data)[u]&&(c[u]=a)}return;case"push":case"unshift":var f="unshift"==n,p=(v[0]||{}).el||l,h=f?0:o.length,w=f?R(p):l;return N([].slice.call(r),(function(e){var t=_({index:h++,reference:w,item:e});f&&(w=t)})),void(f&&i());default:return k()}}(r)}),e)})})),S=T(h),L=S.filters,P=function(e){return L.filter((function(t){return t.substring(0,e.length)===e}))},D=P("where");N(D,(function(e){return j(S.sourceValue,e)})),I.off(),(k=function(){var r=(S=S||T(y(m(e.nodeValue,"")))).iterableExpression,i=P("order");N(v,(function(e){var t=R(e.el);t.parentElement&&c.removeChild(t)})),v=[],o.evaluator.exec({data:n,isReturn:!1,context:o.context,code:"var __e = __each, __fl = __filters, __f = __for; __f(__fl("+r+"), function($$itm, $$idx) { __e($$itm, $$idx); })",aditional:{__for:N,__each:function(e,t){return _({index:t,item:e})},__filters:function(e){var n=u.array(e);N(D,(function(e){return n=j(n,e)}));return N(i,(function(e){return function(e){var r=e.split(":").map((function(e){return y(e)}));1==r.length?t.error("Invalid “"+p+"” order  expression “"+h+"”, at least the order type must be provided"):n=function(e,n,r){return g=!0,n||(n="asc"),e.sort((function(e,o){var i=function(e,r){if(d(e)||d(r))return 0;switch(w(n)){case"asc":return e?1:-1;case"desc":return r?-1:1;default:return t.log("The “"+n+"” order type is invalid: “"+h+"”. Available types are: “asc”  for order ascendent and “desc” for order descendent."),0}};return r?i(e[r]>o[r],o[r]<e[r]):i(e>o,o<e)}))}(n,r[1],r[2])}(e)})),n}}}),S=null})()}},e.prototype.def=function(e,n){var i=this.toOwnerNode(e),a=y(m(e.nodeValue,""));if(""===a)return t.error(this.errorMsgEmptyNode(e));if(0!==this.delimiter.run(a).length)return t.error(this.errorMsgNodeValue(e));var s={},u=r.on("AfterGet",(function(e){e.propName in s||(s[e.propName]=void 0),o.set(s,e.propName,e)})),c=this.evaluator.exec({data:n,code:a,context:this.context});if(!f(c))return t.error("Expected a valid Object Literal expression in “"+e.nodeName+"” and got “"+a+"”.");N(Object.keys(c),(function(e){e in s||(s[e]=c[e])})),r.off("AfterGet",u.callback),this.bouer.set(s,n),i.removeAttribute(e.nodeName)},e.prototype.text=function(e){var n=this.toOwnerNode(e),r=y(m(e.nodeValue,""));if(""===r)return t.error(this.errorMsgEmptyNode(e));n.textContent=r,n.removeAttribute(e.nodeName)},e.prototype.bind=function(e,n){var r=this.toOwnerNode(e),o=y(m(e.nodeValue,""));return""===o?t.error(this.errorMsgEmptyNode(e)):0!==this.delimiter.run(o).length?t.error(this.errorMsgNodeValue(e)):(this.binder.create({node:e,isConnected:function(){return r.isConnected},fields:[{field:o,expression:o}],context:this.context,data:n}),void r.removeAttribute(e.nodeName))},e.prototype.property=function(e,n){var r=this,o=this.toOwnerNode(e),i=y(m(e.nodeValue,"")),a=function(e){},u=function(e){return"Invalid value, expected an Object/Object Literal in “"+e.nodeName+"” and got “"+m(e.nodeValue,"")+"”."};if(""===i)return t.error(u(e));if(0===this.delimiter.run(i).length){var c=this.evaluator.exec({data:n,code:i,context:this.context});if(!f(c))return t.error(u(e));this.binder.create({data:n,node:e,isReplaceProperty:!1,context:this.context,fields:[{expression:i,field:i}],isConnected:function(){return o.isConnected},onUpdate:function(){return a(r.evaluator.exec({data:n,code:i,context:r.context}))}}),o.removeAttribute(e.nodeName),(a=function(t){var n=e.nodeName.substring(s.property.length),r=o.attributes[n];if(r||(o.setAttribute(n,""),r=o.attributes[n]),N(Object.keys(t),(function(e){if(!t[e])return r.value=y(r.value.replace(e,""));r.value=r.value.includes(e)?r.value:y(r.value+" "+e)})),""===r.value)return o.removeAttribute(n)})(c)}},e.prototype.data=function(e,n){var i=this.toOwnerNode(e),s=y(m(e.nodeValue,""));if(0!==this.delimiter.run(s).length)return t.error("The “data” attribute cannot contain delimiter.");i.removeAttribute(e.nodeName);var c={},l=u.obj(n,{$data:n}),d=r.on("AfterGet",(function(e){e.propName in c||(c[e.propName]=void 0),o.set(c,e.propName,e)}));if(""===s)c=u.obj(this.bouer.data);else{var p=this.evaluator.exec({data:l,code:s,context:this.context});if(!f(p))return t.error("Expected a valid Object Literal expression in “"+e.nodeName+"” and got “"+s+"”.");N(Object.keys(p),(function(e){e in c||(c[e]=p[e])}))}r.off("AfterGet",d.callback);var h=e.nodeName.split(":")[1];return h&&(h=h.replace(/\[|\]/g,""),G.app(this.bouer).resolve(Z).set("data",h,c)),a.transform({context:this.context,data:c}),this.compiler.compile({data:c,el:i,context:this.context})},e.prototype.href=function(e,n){var r=this,o=this.toOwnerNode(e),i=y(m(e.nodeValue,""));if(""===i)return t.error(this.errorMsgEmptyNode(e));o.removeAttribute(e.nodeName);var a=I(m(this.bouer.config.usehash,!0)?"#":"",i);o.setAttribute("href",a);var s=o.attributes.href,u=this.delimiter.run(i);0!==u.length&&this.binder.create({data:n,node:s,isConnected:function(){return o.isConnected},context:this.context,fields:u}),o.addEventListener("click",(function(e){e.preventDefault(),G.app(r.bouer).resolve(K).navigate(s.value)}),!1)},e.prototype.entry=function(e,n){var r=this.toOwnerNode(e),o=y(m(e.nodeValue,""));return""===o?t.error(this.errorMsgEmptyNode(e)):0!==this.delimiter.run(o).length?t.error(this.errorMsgNodeValue(e)):(r.removeAttribute(e.nodeName),void G.app(this.bouer).resolve(re).prepare([{name:o,template:r.outerHTML,data:n}]))},e.prototype.put=function(e,n){var r=this,o=this.toOwnerNode(e),i=y(m(e.nodeValue,"")),a=function(){};return""===i?t.error(this.errorMsgEmptyNode(e)+" Direct <empty string> injection value is not allowed."):0!==this.delimiter.run(i).length?t.error("Expected an expression with no delimiter in “"+e.nodeName+"” and got “"+m(e.nodeValue,"")+"”."):(this.binder.create({data:n,node:e,isConnected:function(){return o.isConnected},fields:[{expression:i,field:i}],context:this.context,isReplaceProperty:!1,onUpdate:function(){return a()}}),o.removeAttribute(e.nodeName),void(a=function(){if(o.innerHTML="",""!==(i=y(m(e.nodeValue,"")))){var t=O(i).appendTo(o).build();G.app(r.bouer).resolve(re).order(t,n)}})())},e.prototype.req=function(e,n){var r=this,i=this.toOwnerNode(e),c=this.toOwnerNode(i),d=e.nodeName,f=y(m(e.nodeValue,""));if(!f.includes(" of ")&&!f.includes(" as "))return t.error("Expected a valid “for” expression in “"+d+"” and got “"+f+'”.\nValid: e-req="item of url".');if(!i.hasAttribute("skeleton-cloned")){var p,h=this.delimiter.run(f),v={},b=(e.nodeName.split(":")[1]||"").replace(/\[|\]/g,""),g=A(void 0,"request-"+(b||l(6))),w=function(){},x={node:e,data:n,nodeName:d,nodeValue:f,fields:h,parent:i,value:f};c.insertBefore(g,i);var N=G.app(this.bouer).resolve(F);f.includes(" of ")&&N.insertItems(i),0!==h.length&&(x=this.binder.create({data:n,node:e,fields:h,context:this.context,isReplaceProperty:!1,isConnected:function(){return g.isConnected},onUpdate:function(){return w()}})),i.removeAttribute(e.nodeName),o.set(i,"isConnected",{get:function(){return g.isConnected}});var k=function(e){var t=i.attributes.getNamedItem(s.on+e);return t&&r.eventHandler.compile(t,n,r.context),{emit:function(t){r.eventHandler.emit({attachedNode:i,eventName:e,init:{detail:t}})}}},C=function(e){var t=e.split("|").map((function(e){return y(e)})),n=t.shift().replace(/\(|\)/g,""),r=" of ",o=n.split(r);return o.length>1||(o=n.split(r=" as ")),{filters:t,type:y(r),expression:y(n),variables:y(o[0]),path:y(o[1])}},O=function(e,n){return e?"data"in e?"of"!==n||Array.isArray(e.data)?"as"!==n||"object"==typeof e.data||(t.error('Using e-req="... “as” ..." the response must be a list of items, and got “'+typeof e.data+"”."),!1):(t.error('Using e-req="... “of” ..." the response must be a list of items, and got “'+typeof e.data+"”."),!1):(t.error("the return must contain the “data” property. Example: { data: {} | [] }"),!1):(t.error("the return must be an object containing “data” property. Example: { data: {} | [] }"),!1)},_=G.app(this.bouer).resolve(J);if(!_.has("req"))return t.error("There is no “req” middleware provided for the “e-req” directive requests.");var E=function(e){return{binder:x,detail:{requestType:e.type,requestPath:e.path,reponseData:v}}};(p=function(){var c=C(y(e.nodeValue||""));k(s.builtInEvents.request).emit(),_.run("req",{type:"onBind",action:function(e){e(E(c),{success:function(e){!function(e){var d;if(O(e,c.type)){if(a.transform({context:r.context,data:e}),b&&G.app(r.bouer).resolve(Z).set("req",b,e),k(s.builtInEvents.response).emit({response:e}),"data"in v)return v.data=e.data;if(v.data=void 0,o.transfer(v,e,"data"),"as"===c.type){var f=y(c.variables.split(",")[0].replace(/\(|\)/g,""));return f in n?t.error("There is already a “"+f+"” defined in the current scope. Provide another variable name in order to continue."):(n[f]=e.data,r.compiler.compile({el:i,data:a.transform({context:r.context,data:n}),context:r.context,isConnected:function(){return g.isConnected}}))}if("of"===c.type){N.clearItems(i);var p=l(8,"res"),h=c.expression.replace(c.path,p),m=u.obj(((d={})[p]=e.data,d),n);i.setAttribute(s.for,u.array([h],c.filters).join(" | ")),o.set(m,p,o.descriptor(e,"data")),r.compiler.compile({el:i,data:m,context:r.context,isConnected:function(){return g.isConnected}})}}}(e)},fail:function(e){return k(s.builtInEvents.fail).emit({error:e})},done:function(){return k(s.builtInEvents.done).emit()}})}})})(),w=function(){var t=C(y(e.nodeValue||""));_.run("req",{type:"onUpdate",default:function(){return p()},action:function(e){e(E(t),{success:function(e){O(e,t.type)&&(v.data=e.data)},fail:function(e){return k(s.builtInEvents.fail).emit({error:e})},done:function(){return k(s.builtInEvents.done).emit()}})}})}}},e.prototype.wait=function(e){var n=this,r=this.toOwnerNode(e),o=y(m(e.nodeValue,""));if(""===o)return t.error(this.errorMsgEmptyNode(e));if(0!==this.delimiter.run(o).length)return t.error(this.errorMsgNodeValue(e));r.removeAttribute(e.nodeName);var i=G.app(this.bouer).resolve(Z),s=i.wait[o];if(s){if(s.nodes.push(r),!s.data)return;N(s.nodes,(function(e){n.compiler.compile({el:e,context:s.context,data:a.transform({context:s.context,data:s.data})})})),m(s.once,!1)&&delete i.wait[o]}return i.wait[o]={nodes:[r],context:this.context}},e.prototype.custom=function(e,t){var n=this.toOwnerNode(e),r=e.nodeName,o=y(m(e.nodeValue,"")),i=this.delimiter.run(o),a=this.$custom[r],s=this.binder.create({data:t,node:e,fields:i,isReplaceProperty:!1,context:this.context,isConnected:function(){return n.isConnected},onUpdate:function(){"function"==typeof a.onUpdate&&a.onUpdate(e,s)}});m(a.removable,!0)&&n.removeAttribute(r);var u=r.split(".");u.shift();var c=(r.split(":")[1]||"").split(".")[0];return s.modifiers=u,s.argument=c,"function"==typeof a.onBind&&m(a.onBind(e,s),!1)},e.prototype.skeleton=function(e){var t;if(""===y(m(e.nodeValue,""))){var n=this.toOwnerNode(e);n.removeAttribute(e.nodeName);var r=n.getAttribute("skeleton-clone-code");r&&(n.removeAttribute("skeleton-clone-code"),N([].slice.call(null===(t=this.bouer.el)||void 0===t?void 0:t.querySelectorAll('[="'+r+'"]')),(function(e){(e.parentElement||e.parentNode).removeChild(e)})))}},e}(),ee=function(){function e(e,t){this._IRT_=!0,this.NODES_TO_IGNORE_IN_COMPILATION={SCRIPT:1,"#comment":8},this.bouer=e,this.directives=null!=t?t:{},this.binder=G.app(e).resolve(Y),this.delimiter=G.app(e).resolve(B),this.eventHandler=G.app(e).resolve(W),this.component=G.app(e).resolve(re)}return e.prototype.compile=function(e){var n=this,r=e.el,o=e.context||this.bouer,i=e.data||this.bouer.data,a=e.isConnected||function(){return r.isConnected},u=G.app(this.bouer).resolve(K);if(!r)return t.error("Invalid element provided to the compiler.");if(!this.analize(r.outerHTML))return r;var c=new Q(this.directives||{},this,o),l=function(r,i){if(!(r.nodeName in n.NODES_TO_IGNORE_IN_COMPILATION)){if(r instanceof Element){if(s.skip in r.attributes)return c.skip(r);if((r.localName.toLowerCase()===s.slot||r.tagName.toLowerCase()===s.slot)&&e.componentSlot){var d=e.componentSlot,f=function(e,t){var n=function(e){var n=e.cloneNode(!0);t.parentNode.insertBefore(n,t),l(n,i)};"SLOTCONTAINER"===e.nodeName||"SLOT"===e.nodeName?N(C(e.childNodes),(function(e){return n(e)})):n(e),t.parentNode.removeChild(t)};if(r.hasAttribute("default")){if(0==d.childNodes.length)return;return f(d,r)}if(r.hasAttribute("name")){var h=r.attributes.getNamedItem("name");return function e(t){var n=t.getAttribute(s.slot);return n&&n===h.value?(t.removeAttribute(s.slot),f(t,r)):0===t.children.length?null:void N(C(t.children),(function(t){e(t)}))}(d)}}if(s.def in r.attributes&&c.def(V(r,s.def),i),s.entry in r.attributes&&c.entry(V(r,s.entry),i),s.wait in r.attributes)return c.wait(V(r,s.wait));if(s.for in r.attributes)return c.for(V(r,s.for),i);if(n.component.check(r.localName))return n.component.order(r,i);if(s.if in r.attributes)return c.if(V(r,s.if),i);var v,m;if((s.elseif in r.attributes||s.else in r.attributes)&&t.warn("The “"+s.elseif+"” or “"+s.else+"” requires an element with “"+s.if+"” above."),s.show in r.attributes&&c.show(V(r,s.show),i),v=V(r,s.req))return c.req(v,i);if(m=V(r,s.data))return c.data(m,i);if(s.put in r.attributes)return c.put(V(r,s.put),i);if(u.routeView===r)return;N(C(r.attributes),(function(e){l(e,i)}))}if(s.check(r,s.href))return c.href(r,i);if(s.check(r,s.text))return c.text(r);if(s.check(r,s.bind))return c.bind(r,i);if(!Object.keys(c.$custom).find((function(e){return s.check(r,e)}))||!c.custom(r,i)){if(s.check(r,s.property)&&!s.isConstant(r.nodeName)&&c.property(r,i),s.check(r,s.skeleton)&&c.skeleton(r),s.check(r,s.on))return n.eventHandler.compile(r,i,o);var b,y;if(b=n.delimiter.shorthand(r.nodeName)){var g=r.ownerElement||r.parentNode,w=U.createAttribute("e-"+b.expression);return w.value="{{ "+b.expression+" }}",g.attributes.setNamedItem(w),g.attributes.removeNamedItem(b.field),n.binder.create({node:w,isConnected:a,fields:[{expression:b.expression,field:w.value}],context:o,data:i})}p(r.nodeValue)&&(y=n.delimiter.run(r.nodeValue))&&0!==y.length&&n.binder.create({node:r,isConnected:a,fields:y,context:o,data:i}),N(C(r.childNodes),(function(e){return l(e,i)}))}}};return l(r,i),r.hasAttribute&&r.hasAttribute(s.silent)&&r.removeAttribute(s.silent),v(e.onDone)&&P(e.onDone.call(o,r)),this.eventHandler.emit({eventName:s.builtInEvents.compile,attachedNode:r,once:!0,init:{detail:i}}),r},e.prototype.analize=function(e){for(var n="<([a-z0-9-_]{1,}|/[a-z0-9-_]{1,})((.|\n|\r)*?)>",r=[],o=[],i=0,a="",s=!0,u=e.replace(/<script((.|\n|\r)*?)<\/script>/gm,"<script><\/script>").replace(/<style((.|\n|\r)*?)<\/style>/gm,"<style></style>").replace(/<pre((.|\n|\r)*?)<\/pre>/gm,"<pre></pre>").replace(/<code((.|\n|\r)*?)<\/code>/gm,"<code></code>").replace(/<svg((.|\n|\r)*?)<\/svg>/gm,"<svg></svg>").replace(/<!--((.|\n|\r)*?)-->/gm,"").replace(/&nbsp;/g,"&#160;").match(new RegExp(n,"ig"))||[],c=new Set(["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"]),l=0;l<u.length;l++){var d=u[l],f=w(d.match(new RegExp(n,"i"))[1]),p="/"===d[1];if(r.push({tag:d,ident:p?i:++i}),!c.has(f)&&(o.push({name:f,tag:d}),p)){if(i--,!s)continue;var h=o.pop(),v=o.pop();v&&v.name===h.name.substring(1)||(i++,a="Syntax Error: Unexpected token, the openning tag `"+(v.tag||"NoToken")+"` does not match with closing tag: `"+h.tag+"`:\n\n",s=!1,r.push(r[r.length-1]),r[r.length-2]={tag:"<====================== Line Error ======================",ident:i+1})}}return s||t.error(a+r.map((function(e,t){return t+1+"."+Array(e.ident).fill("  ").join("")+e.tag})).join("\n")),s},e}(),te=function(){function e(e){this._IRT_=!0,this.url=e||U.location.href}return e.prototype.params=function(e){var t=this,n={};if(e&&p(e)){var r=this.url.split("?")[0].split("/").reverse();""===r[0]&&r.shift(),N(e.split("/").reverse(),(function(e,t){var o=RegExp("{([\\S\\s]*?)}","ig").exec(e);Array.isArray(o)&&(n[o[1]]=r[t])}))}return function(){var e=t.url.split("?")[1];if(!e)return t;N(e.split("&"),(function(e){var t=e.split("=");n[t[0]]=(t[1]||"").split("#")[0]}))}(),n},e.prototype.add=function(e){var t=[];N(Object.keys(e),(function(n){t.push(n+"="+e[n])}));var n=t.join("&");return this.url.includes("?")?"&"+n:"?"+n},e.prototype.remove=function(e){return e},e}(),ne=function(){function e(e){this._IRT_=!0,this.isDestroyed=!1,this.children=[],this.assets=[],this.events=[];var t=void 0,n=void 0,r=void 0;p(e)?n=e:(t=e.name,n=e.path,r=e.data,Object.assign(this,e)),this.name=t||"",this.path=n||"",this.data=a.transform({context:this,data:r||{}});var i={value:e.template};o.set(this,"template",{get:function(){return i.value},set:function(e){return i.value=e}})}return e.prototype.export=function(e){var n=this;return f(e)?N(Object.keys(e),(function(t){n.data[t]=e[t],o.transfer(n.data,e,t)})):t.log('Invalid object for component.export(...), only "Object Literal" is allowed.')},e.prototype.destroy=function(){var e=this;if(!this.el)return!1;if(!(this.isDestroyed&&this.bouer&&this.bouer.isDestroyed)){this.keepAlive||(this.isDestroyed=!0),this.emit("beforeDestroy");var t=this.el.parentElement;t&&t.removeChild(this.el),this.emit("destroyed"),N(this.events,(function(t){return e.off(t.eventName,t.callback)})),this.events=[];var n=G.app(this.bouer).resolve(re).activeComponents;n.splice(n.indexOf(this),1)}},e.prototype.params=function(){return(new te).params(this.route)},e.prototype.emit=function(e,t){G.app(this.bouer).resolve(W).emit({eventName:e,attachedNode:this.el,init:t})},e.prototype.on=function(e,n){var r=new Set(["created","beforeMount","mounted","beforeLoad","loaded","beforeDestroy","destroyed"]);new Set(["requested","blocked","failed"]).has(e)&&t.warn("The “"+e+"” Event is called before the component is mounted, to be dispatchedit needs to be on registration object: { "+e+": function(){ ... }, ... }.");var o=G.app(this.bouer).resolve(W).on({eventName:e,callback:n,attachedNode:this.el,context:this,modifiers:{once:r.has(e),autodestroy:!1}});return this.events.push(o),o},e.prototype.off=function(e,t){G.app(this.bouer).resolve(W).off({eventName:e,callback:t,attachedNode:this.el}),this.events=k(this.events,(function(n){return!(n.eventName==e&&n.callback==t)}))},e.prototype.addAssets=function(e){var n=[],r={js:"script",css:"link",scss:"link",sass:"link",less:"link",styl:"link",style:"link"},o=function(e,n){var r=!(!e&&!y(e));return r||t.error("Invalid asset “src”, in assets["+n+"].src"),r},i=function(e,n){var o=e.split(".");return r[w(o[o.length-1])]||t.error("Couldn't find out what type of asset it is, provide the “type” explicitly at assets["+n+"].type")};N(e,(function(e,t){var a="",s="",u=!0;if("string"==typeof e){if(!o(e,t))return;s=i(y(a=e.replace(/\.less|\.s[ac]ss|\.styl/i,".css")),t)}else{if(!o(y(a=e.src.replace(/\.less|\.s[ac]ss\.styl/i,".css")),t))return;if(e.type)s=r[w(e.type)]||e.type;else if(!(s=i(a,t)))return;u=m(e.scoped,!0)}if("."!==a[0]){var c=j(a),l=c.baseURI===a.substring(0,c.baseURI.length);a=I(l?c.origin:c.baseURI,c.pathname)}var d=O(s,(function(e){switch(m(u,!0)&&e.setAttribute("scoped","true"),w(s)){case"script":default:e.setAttribute("src",a);break;case"link":e.setAttribute("href",a),e.setAttribute("rel","stylesheet"),e.setAttribute("type","text/css")}})).build();n.push(d)})),this.assets.push.apply(this.assets,n)},e.prototype.set=function(e,t){return M(this,e,t)},e}(),re=function(){function e(e){this._IRT_=!0,this.requests={},this.components={},this.stylesController={},this.activeComponents=[],this.bouer=e,this.delimiter=G.app(e).resolve(B),this.eventHandler=G.app(e).resolve(W),this.evaluator=G.app(e).resolve(z)}return e.prototype.check=function(e){return e in this.components},e.prototype.request=function(e,n){var r=this;if(!d(this.requests[e]))return this.requests[e].push(n);this.requests[e]=[n];var o=j(e),i=null!=U.head.querySelector("base");c(I(o.baseURI===e.substring(0,o.baseURI.length)?o.origin:o.baseURI,o.pathname),{headers:{"Content-Type":"text/plain"}}).then((function(e){if(!e.ok)throw new Error(e.statusText);return e.text()})).then((function(t){N(r.requests[e],(function(n){n.success(t,e)})),delete r.requests[e]})).catch((function(n){i||t.warn('It seems like you are not using the “<base href="/base/components/path/" />” element, try to add as the first child into “<head></head>” element.'),N(r.requests[e],(function(t){return t.fail(n,e)})),delete r.requests[e]}))},e.prototype.prepare=function(e,n){var r=this;N(e,(function(e,o){var i=e.prototype instanceof ne,a=e;if(i&&((a=G.app(r.bouer).resolve(e)||G.new(e)).clazz=e),(!a.path||d(a.path))&&(!a.template||d(a.template)))return t.warn("The component at options.components["+o+"] has not valid “path” or “template” property defined, then it was ignored.");if(d(a.name)||!a.name){if(!a.path||d(a.path))return t.warn("Provide a “name” to component at options.components["+o+"] position.");var s=a.path.toLowerCase().split("/"),u=s[s.length-1].replace(".html","");r.components[u]&&(u=w(l(8,u+"-component-"))),a.name=u}a.name=a.name.toLowerCase();var c="";if(r.components[a.name])return t.warn("The component name “"+a.name+"” is already define, try changing the name.");d(n)||(c=n.route||""),d(a.route)||(a.route="/"+I(c,a.route)),Array.isArray(a.children)&&r.prepare(a.children,a),G.app(r.bouer).resolve(K).configure(r.components[a.name]=a);var f=function(e){e&&r.request(a.path,{success:function(e){a.template=e},fail:function(e){t.error(L(e))}})};return d(a.prefetch)?(a.prefetch=m(r.bouer.config.prefetch,!0))?f(a.path):void 0:!0===a.prefetch?f(a.path):void 0}))},e.prototype.order=function(e,n,r){var o=this,i=w(e.nodeName),a=this.components[i];if(!a)return t.error("No component with name “"+i+"” registered.");var s=function(){var s=function(e){var t;return!0===(t=e instanceof ne&&e.clazz?G.app(o.bouer).resolve(e.clazz)||G.new(e.clazz):e instanceof ne?function(e){var t=Object.create(e.__proto__);return N(Object.keys(e),(function(n){return t[n]=e[n]})),t}(e):new ne(e)).keepAlive&&(o.components[i]=t),t.template=e.template,t.bouer=o.bouer,t};return a.template?o.insert(e,s(a),n,r):a.path?(o.addEvent("requested",e,a,o.bouer).emit(),void o.request(a.path,{success:function(t){a.template=t,o.insert(e,s(a),n,r)},fail:function(n){t.error("Failed to request <"+i+"/> component with path “"+a.path+"”."),t.error(L(n)),o.addEvent("failed",e,a,o.bouer).emit()}})):t.error("Expected a valid value in `path` or `template` got invalid value at “"+i+"” component.")};if(a.restrictions&&a.restrictions.length>0){var u=[],c=a.restrictions.map((function(e){var t=e.call(o.bouer,a);return!1===t?u.push(e):t instanceof Promise&&t.then((function(t){!1===t&&u.push(e)})).catch((function(){return u.push(e)})),t})),l=this.addEvent("blocked",e,a,this.bouer),d=function(){return l.emit({detail:{component:a.name,message:"Component “"+a.name+"” blocked by restriction(s)",blocks:u}})};return Promise.all(c).then((function(e){e.every((function(e){return 1==e}))?s():d()})).catch((function(){return d()}))}return s()},e.prototype.find=function(e){for(var t=Object.keys(this.components),n=0;n<t.length;n++){var r=this.components[t[n]];if(e(r))return r}return null},e.prototype.addEvent=function(e,t,n,r){var o=this,i=n[e];return"function"==typeof i&&this.eventHandler.on({eventName:e,callback:function(e){return i.call(r||n,e)},attachedNode:t,modifiers:{once:!0},context:r||n}),{emit:function(r){return function(r){o.eventHandler.emit({attachedNode:t,once:!0,eventName:e,init:r}),o.eventHandler.emit({eventName:"component:"+e,init:{detail:{component:n}},once:!0})}(r)}}},e.prototype.insert=function(e,n,i,p){var h=this,b=w(e.nodeName),y=e.parentElement,g=G.app(this.bouer).resolve(ee);if(y){if(d(n.template))return t.error("The <"+b+"/> component is not ready yet to be inserted.");if(g.analize(n.template)){this.activeComponents.includes(n)||this.activeComponents.push(n);var x=O("SlotContainer",(function(t){t.innerHTML=e.innerHTML,e.innerHTML=""})).build();(!1===(e.hasAttribute("keep-alive")||m(n.keepAlive,!1))||d(n.el))&&_("body",(function(e){return e.innerHTML=n.template,N([].slice.call(e.children),(function(t){-1!==["SCRIPT","LINK","STYLE"].indexOf(t.nodeName)&&(n.assets.push(t),e.removeChild(t))})),0===e.children.length?t.error("The component <"+b+"/> seems to be empty or it has not a root element. Example: <div></div>, to be included."):e.children.length>1?t.error("The component <"+b+"/> seems to have multiple root element, it must have only one root."):void(n.el=e.children[0])}));var A=n.el;if(!d(A)){var E=this.addEvent("created",A,n),T=this.addEvent("beforeMount",A,n),j=this.addEvent("mounted",A,n),I=this.addEvent("beforeLoad",A,n),D=this.addEvent("loaded",A,n);this.addEvent("beforeDestroy",A,n),this.addEvent("destroyed",A,n);var R=k(n.assets,(function(e){return"SCRIPT"===e.nodeName})),M=n.init;v(M)&&P(M.call(n));var q=function(c){try{var d;if(V(e,s.data)||e.setAttribute("data","$data"),d=V(e,s.data)){var O=d;0!==h.delimiter.run(O.value).length?t.error("The “data” attribute cannot contain delimiter, source element: <"+b+"/>."):function(e){var s={},c=u.obj(i,{$data:i}),l=r.on("AfterGet",(function(e){e.propName in s||(s[e.propName]=void 0),o.set(s,e.propName,e)}));if(""===e.value)s=u.obj(h.bouer.data);else{var d=G.app(h.bouer).resolve(z).exec({data:c,code:e.value,context:h.bouer});f(d)?N(Object.keys(d),(function(e){e in s||(s[e]=d[e])})):t.error("Expected a valid Object Literal expression in “"+e.nodeName+"” and got “"+e.value+"”.")}l.off(),s=a.transform({context:n,data:s}),N(Object.keys(s),(function(e){o.transfer(n.data,s,e)}))}(O),e.removeAttribute(O.name)}G.app(h.bouer).resolve(z).execRaw(c||"",n),E.emit(),N(C(e.attributes),(function(t){if(e.removeAttribute(t.name),"class"===t.nodeName)return e.classList.forEach((function(e){A.classList.add(e)}));A.attributes.setNamedItem(t)})),T.emit(),"root"in e||o.set(e,"root",{value:A}),y.replaceChild(A,e),j.emit();var _={};A.classList.forEach((function(e){return _[e]=!0}));var P=function(e,t){var n=[],r="STYLE"===e.nodeName;if(e.sheet){for(var o=e.sheet.cssRules,i=0;i<o.length;i++){var a=o.item(i);if(a){var s=a,u=s.selectorText;if(u){var c=u.split(" ")[0],l="."==c[0]||"#"==c[0]?c.substring(1):c,d=_[l]?"":" ",f="."+t,p=s.selectorText.split(" ");p[0]===w(A.tagName)&&p.shift(),s.selectorText=f+d+p.join(" ")}r&&n.push(s.cssText)}}r&&(e.innerText=n.join(" "))}},R=k(n.assets,(function(e){return"SCRIPT"!==e.nodeName})),M="component-style";if(N(R,(function(e){var t=e.cloneNode(!0);if(t instanceof HTMLLinkElement){var r="/"===n.path[0]?n.path.substring(1):n.path;t.href=S(r,t.getAttribute("href")||""),t.rel="stylesheet"}if(h.stylesController[b]){var o=h.stylesController[b];if(o.elements.indexOf(A)>-1)return;return o.elements.push(A),N(o.styles,(function(e){A.classList.add(e.getAttribute(M))}))}var i=l(7,"bouer-s");if(t.setAttribute(M,i),t instanceof HTMLLinkElement&&t.hasAttribute("scoped")&&(t.onload=function(e){return P(e.target,i)}),h.stylesController[b]={styles:[U.head.appendChild(t)],elements:[A]},t.hasAttribute("scoped"))return A.classList.add(i),t instanceof HTMLStyleElement?P(t,i):void 0})),I.emit(),g.compile({data:a.transform({context:n,data:n.data}),onDone:function(){v(p)&&p(n),D.emit()},componentSlot:x,context:n,el:A}),!1===m(h.bouer.config.autoComponentDestroy,!0))return;X((function(e){if(!n.el.isConnected){if(h.bouer.isDestroyed)return e();n.destroy(),e();var t=h.stylesController[n.name];if(t){var r=t.elements.indexOf(n.el);t.elements.splice(r,1),t.elements.length>0||y.isConnected||(N(t.styles,(function(e){return N(C(U.head.children),(function(t){if(t===e)return U.head.removeChild(e)}))})),delete h.stylesController[n.name])}}}))}catch(e){t.error("Error in <"+b+"/> component."),t.error(L(e))}};if(0===R.length)return q();var $=[],H=[],B=[],F={};return N(R,(function(e){if(""==e.src||e.innerHTML)$.push(e.innerHTML);else{var t="/"===n.path[0]?n.path.substring(1):n.path;e.src=S(t,e.getAttribute("src")||""),B.push(e.src)}})),0==B.length?q($.join("\n\n")):N(B,(function(e,n){F[e]=!0,c(e,{headers:{"Content-Type":"text/plain"}}).then((function(e){if(!e.ok)throw new Error(e.statusText);return e.text()})).then((function(t){if(delete F[e],H[n]=t,0===Object.keys(F).length)return q(u.array(H,$).join("\n\n"))})).catch((function(n){n.stack="",t.error("Error loading the <script src='"+e+"'><\/script> in <"+b+"/> component, remove it in order to be compiled."),t.log(n)}))}))}}}},e}(),oe=function(){function e(){}return e.by=function(e,t){return k(G.app(e).resolve(re).activeComponents,t)},e.byId=function(e,t){return k(G.app(e).resolve(re).activeComponents,(function(e){return e.el&&R(e.el).id==t}))[0]},e.byName=function(e,t){return k(G.app(e).resolve(re).activeComponents,(function(e){return e.name.toLowerCase()==(t||"").toLowerCase()}))},e}(),ie=function(){function e(e,n){var r=this;this._IRT_=!0,this.name="Bouer",this.version="3.1.0",this.__id__=G.newId(),this.refs={},this.isDestroyed=!1,this.isInitialized=!1;var i=this;this.options=n=n||{},this.config=n.config||{},this.deps=n.deps||{},N(Object.keys(this.deps),(function(e){var t=r.deps,n=t[e];t[e]="function"==typeof n?n.bind(r):n}));var u=n.delimiters||[];G.app(this).add(Z,[this],!0),G.app(this).add(z,[this],!0),G.app(this).add(J,[this],!0),G.app(this).add(Y,[this],!0),G.app(this).add(W,[this],!0),G.app(this).add(re,[this],!0),G.app(this).add(F,[this],!0),G.app(this).add(K,[this],!0),G.app(this).add(B,[this,u],!0),G.app(this).add(ee,[this,n.directives],!0);var c=G.app(this).resolve(Z),l=G.app(this).resolve(J),f=G.app(this).resolve(re),p=G.app(this).resolve(ee),h=G.app(this).resolve(F),v=G.app(this).resolve(B);"function"==typeof n.middleware&&n.middleware.call(i,l.subscribe,i),this.data=a.transform({data:n.data||{},context:i}),this.globalData=a.transform({data:n.globalData||{},context:i}),u.push.apply(u,[{name:"html",delimiter:{open:"{{:html ",close:"}}"}},{name:"common",delimiter:{open:"{{",close:"}}"}}]),this.$routing=G.app(this).resolve(K),this.$delimiters={add:v.add,remove:v.remove,get:function(){return v.delimiters.slice()}},this.$data={get:function(e){return e?c.data[e]:null},set:function(e,n,o){return e in c.data?t.log("There is already a data stored with this key “"+e+"”."):(!0===m(o,!1)&&a.transform({context:i,data:n}),G.app(r).resolve(Z).set("data",e,n))},unset:function(e){return delete c.data[e]}},this.$req={get:function(e){return e?c.req[e]:void 0},unset:function(e){return delete c.req[e]}},this.$wait={get:function(e){if(e){var t=c.wait[e];if(t)return m(t.once,!0)&&r.$wait.unset(e),t.data}},set:function(e,t,n){if(!(e in c.wait))return c.wait[e]={data:t,nodes:[],once:m(n,!1),context:i};var o=c.wait[e];o.data=t,N(o.nodes,(function(e){e&&p.compile({el:e,context:o.context,data:a.transform({context:o.context,data:o.data})})})),m(n,!1)&&r.$wait.unset(e)},unset:function(e){return delete c.wait[e]}},this.$skeleton={clear:function(e){return h.clear(e)},set:function(e){return h.init(e)}},this.$components={add:function(e){return f.prepare([e])},get:function(e){return f.components[e]},viewBy:function(e){return oe.by(r,e)},viewByName:function(e){return oe.byName(r,e)},viewById:function(e){return oe.byId(r,e)}},o.set(this,"refs",{get:function(){var e={};return N(C(b(r.el).querySelectorAll("["+s.ref+"]")),(function(n){var r=y(n.attributes[s.ref].value)||n.name||"";return""===r?t.error("Expected an expression in “"+n.name+"” or at least “name” attribute to combine with “"+n.name+"”."):r in e?(t.warn("The key “"+r+"” in “"+n.name+"” is taken, choose another key."),t.warn(n)):void(e[r]=n)})),e}}),f.prepare(n.components||[]),d(e)||""===y(e)||this.init(e)}return e.create=function(t){return(t=t||{}).config=t.config||{},(t.config||{}).autoUnbind=!1,(t.config||{}).autoOffEvent=!1,(t.config||{}).autoComponentDestroy=!1,new e("",t)},e.toJsObj=function(e,t,n){return q(e,t,n)},e.prototype.init=function(e){var n=this;if(this.isInitialized)return this;if(d(e)||""===y(e))throw t.error(new Error("Invalid selector provided to the instance."));var r=this,o=U.querySelector(e);if(!(this.el=o))throw t.error(new SyntaxError("Element with selector “"+e+"” not found."));var i=this.options||{},a=G.app(this).resolve(Y),s=G.app(this).resolve(W),u=G.app(this).resolve(K),c=G.app(this).resolve(F),l=G.app(this).resolve(ee);return N([i.beforeLoad,i.loaded,i.beforeDestroy,i.destroyed],(function(e){"function"==typeof e&&s.on({eventName:e.name,callback:e,attachedNode:o,modifiers:{once:!0},context:r})})),s.emit({eventName:"beforeLoad",attachedNode:o}),(i.config||{}).autoUnbind=!0,(i.config||{}).autoOffEvent=!0,(i.config||{}).autoComponentDestroy=!0,u.init(),c.init((i.config||{}).skeleton),a.cleanup(),s.cleanup(),this.isInitialized=!0,l.compile({el:this.el,data:this.data,context:this,onDone:function(){return s.emit({eventName:"loaded",attachedNode:o})}}),$.addEventListener("beforeunload",(function(){n.isDestroyed||(s.emit({eventName:"beforeDestroy",attachedNode:o}),n.destroy())}),{once:!0}),X((function(e){if(n.isDestroyed)return e();o.isConnected||(s.emit({eventName:"beforeDestroy",attachedNode:o}),n.destroy(),e())})),U.head.querySelector('link[rel~="icon"]')||_("link",(function(e){e.rel="icon",e.type="image/png",e.href="https://afonsomatelias.github.io/assets/bouer/img/short.png"})).appendTo(U.head),this},e.prototype.set=function(e,t){return M(this,e,t)},e.prototype.toJsObj=function(e,t,n){return q(e,t,n)},e.prototype.watch=function(e,t,n){return G.app(this).resolve(Y).onPropertyChange(e,t,n||this.data)},e.prototype.react=function(e){return G.app(this).resolve(Y).onPropertyInScopeChange(e)},e.prototype.on=function(e,t,n){return G.app(this).resolve(W).on({eventName:e,callback:t,attachedNode:(n||{}).attachedNode,modifiers:(n||{}).modifiers,context:this})},e.prototype.off=function(e,t,n){return G.app(this).resolve(W).off({eventName:e,callback:t,attachedNode:n})},e.prototype.unbind=function(e,t,n){return G.app(this).resolve(Y).remove(e,n,t)},e.prototype.emit=function(e,t){var n=t||{};return G.app(this).resolve(W).emit({eventName:e,attachedNode:n.element,init:n.init,once:n.once})},e.prototype.lazy=function(e,t){var n,r=this;t=d(t)?500:t;var o=arguments[2];return function(){var i=[].slice.call(arguments),a=o&&!n;clearTimeout(n),n=setTimeout((function(){n=null,o||e.apply(r,i)}),t),a&&e.apply(r,i)}},e.prototype.compile=function(e){return G.app(this).resolve(ee).compile({el:e.el,data:e.data,context:e.context||this,onDone:e.onDone})},e.prototype.destroy=function(){var e=this.el,t=G.app(this).resolve(W).$events,n=(t.destroyed||[]).concat(t["component:destroyed"]||[]);this.emit("destroyed",{element:this.el}),N(n,(function(e){return e.emit({once:!0})})),t.destroyed=[],t["component:destroyed"]=[],"BODY"==e.tagName?e.innerHTML="":U.contains(e)&&e.parentElement.removeChild(e),this.isDestroyed=!0,this.isInitialized=!1,G.app(this).clear()},e}();n.p,n.p,n.p,n.p;const ae=n.p+"components/sign.in/SignIn.html";var se,ue=(se=function(e,t){return se=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},se(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}se(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});const ce=function(e){function t(){return e.call(this,ae)||this}return ue(t,e),t}(ne),le=n.p+"components/sign.recover/SignRecover.html";var de=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const fe=function(e){function t(){return e.call(this,le)||this}return de(t,e),t}(ne),pe=n.p+"components/sign.up/SignUp.html";var he=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const ve=function(e){function t(){return e.call(this,pe)||this}return he(t,e),t}(ne),me=n.p+"components/widgets/popup/Popup.html";var be=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const ye=function(e){function t(){var t=e.call(this,me)||this;return t.data={icon:{warn:"fa-warning",info:"fa-info-circle",error:"fa-times-circle",success:"fa-check-circle"},noClose:!1},t}return be(t,e),t.prototype.loaded=function(e){var t=this,n=e.currentTarget,r=null;if(!this.data.noClose){var o=function(){r=setTimeout((function(){t.destroy(),clearTimeout(r)}),400)};o(),n.addEventListener("mouseover",(function(){clearTimeout(r)})),n.addEventListener("mouseleave",(function(){o()}))}},t}(ne),ge=n.p+"components/dashboard/Dashboard.html";var we=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const xe=function(e){function t(){var t=e.call(this,ge)||this;return t.isDefault=!0,t.title="Dashboard",t.route="/dashboard",t.currentYear=Number((new Date).toLocaleDateString("pt").split("/").reverse()[0]),t.currentMonth=Number((new Date).toLocaleDateString("pt").split("/")[1]),t.months=["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],t.data={items:[{name:"Dell E7077",qty:120,color:"#fcaec1",selling:1e3},{name:"Sony TV 4k UHD",qty:189,color:"#cc6b00",selling:235},{name:"iPhone XR",qty:58,color:"#3caba1",selling:292},{name:"Samsung Ultra 20",qty:88,color:"#ca6aa1",selling:14}],currentMonth:t.months[t.currentMonth-1],currentYear:t.currentYear,selectedYear:t.currentYear,anualInterval:Array(3).fill(t.currentYear).map((function(e,t){return e-t})),acronym:function(e){if(!e)return"#";var t=e.toUpperCase().split(" "),n=t[0],r=t[t.length-1];return n==r?n[0]+n[1]:n[0]+r[0]}},t}return we(t,e),t.prototype.loaded=function(){this.bouer.data.currentPage="Dashboard"},t.prototype.init=function(){},t}(ne),Ne=n.p+"components/404/NotFound.html";var ke=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const Ce=function(e){function t(){var t=e.call(this,Ne)||this;return t.title="404 • Page Not Found",t.isNotFound=!0,t.route="/notfound",t.data={url:location.hash?location.hash:location.pathname},t}return ke(t,e),t.prototype.mounted=function(){this.bouer.data.currentPage="🤷‍♂️ 404"},t}(ne);n(695),n(745),new ie("body",{components:[ce,ve,fe,ye,xe,Ce],data:{alerts:[],baseUrl:"http://localhost:5000/api/",currentPage:"None",pageLoading:!1,showNotification:!1,showConversation:!1,showProfile:!1,openedMenu:null,products:[{id:1,code:"prod1",name:"Água",nameSecondary:"Água Pura",price:150,stock:1e3,subCategory:"Comida",estado:"Activo"},{id:2,code:"prod2",name:"Arroz",nameSecondary:"Arroz Branco",price:250,stock:100,subCategory:"Comida",estado:"Activo"},{id:3,code:"prod3",name:"Massa",nameSecondary:"Massa Amarela",price:200,stock:120,subCategory:"Comida",estado:"Activo"},{id:4,code:"prod4",name:"Feijão",nameSecondary:"Feijão Preto",price:500,stock:10,subCategory:"Comida",estado:"Activo"}],conversations:[{id:1,user:"António Ferraz Lopes",message:"Rato, viste como?",seen:!1,date:"2020-09-05T18:30:50.102"},{id:2,user:"Salomão Satuta",message:"Fruta, viste como?",seen:!1,date:"2020-09-09T20:30:50.10Z"}],notifications:[{id:1,message:"Stock de `Água` está em 5 itens!",date:"2020-09-09T18:41:50.102"},{id:2,type:"fa-warning",message:"Stock de `Rede` está em 0 itens!",date:"2020-09-09T18:26:50.102"},{id:3,message:"Stock de `Rede` está em 5 itens!",date:"2020-09-09T18:20:50.102"}],signOut:function(){},openable:function(e){var t="sub-menu-opened",n=this.data.openedMenu,r=e.currentTarget.nextElementSibling;if(n&&n.classList.remove(t),r===n)return this.data.openedMenu=null;r&&r.classList.add(t),this.data.openedMenu=r,[].slice.call(r.querySelectorAll("a")).filter((function(e){e.onclick=function(){return r.classList.remove(t)}}))}},globalData:{application:{token:"",role:"Perfil",user:{id:"",nome:"",userName:"",user:{}}},preferences:[],notify:function(){this.data}},deps:{web:function(e,t,n,r){var o=this.data.baseUrl;return fetch(o+e,{body:n,method:t||"get",headers:r||{Accept:"application/json","Content-Type":"application/json",Authorization:sessionStorage.token||void 0}}).then((function(e){if(e.ok)return e.json();throw new Error(e.statusText)})).then((function(e){if(!e.success)throw new Error(e.errors.join("\n"));return e})).catch((function(e){if("Unauthorized"!==e.message)throw e}))}},config:{usehash:!1,prefetch:!0,skeleton:{numberOfItems:5}},beforeLoad:function(){var e=this,t=null!=["/sign.in.html","/sign.up.html","/sign.recover.html"].find((function(e){return window.location.href.includes(e)}));if(t&&sessionStorage.token)return window.location.href="/";if(!t&&!sessionStorage.token)return window.location.href="/sign.in.html";var n=0,r=function(){n--,1==e.data.pageLoading&&0===n&&(e.data.pageLoading=!1)};this.on("component:requested",(function(){n++,!1===e.data.pageLoading&&(e.data.pageLoading=!0)})),this.on("component:loaded",(function(){r()})),this.on("component:blocked",(function(){r()})),this.on("component:fail",(function(){r()}))},loaded:function(){}})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,